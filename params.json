{"name":"Exemplar-network-explorer","tagline":"Explore networks of acoustic word tokens","body":"### About Exemplar Network Explorer\r\nExemplar Network Explorer is the software I used for generating the data in my LabPhon 2014 poster presentation.  In addition to generating a measure of reduction based on clustering tokens using spectral distances, it allows the user to inspect each token to see its spectrogram, a visual representation of the auditory representation, and distance matrices between two tokens.  The networks and clusters are visually represented and allow predefined attributes to be used as plotting factors.\r\n\r\n### Installation\r\nBinaries can be downloaded via the [SourceForge page](http://sourceforge.net/projects/exemplarnetworkexplorer/).  It can also be run from source by running the bin/ene_debug.py script.  Exemplar Network Explorer depends on the following software:\r\n\r\n* Python 3.3+ (It may work on Python 2.7, but it has not been tested)\r\n* NumPy\r\n* Scipy\r\n* Scikit-learn\r\n* Networkx\r\n* python-acoustic-similarity\r\n* PySide (bindings for Qt 4.8)\r\n\r\n### Getting started\r\nFile -> Create network from folder... allows you to select a directory that has .wav files in it and build a network based on acoustic distance between the tokens.\r\n\r\nEdit -> Preferences... allows you to specify how acoustic tokens are processed and represented (It defaults to somewhat standard parameters for MFCCs) and how networks are created, namely distance metrics and clustering algorithms.  The network settings that I had in my poster were Affinity propagation and enforcing single clusters.\r\n\r\n### Reduction\r\nOnce you have your network set up, going to Analysis -> Calculate exemplar reduction measure... And that will add a column to the table on left with the Hyper-Hypo speech measure I calculated in the LabPhon poster.  You can then go to File -> Export table as text file... and it'll save it as a tab delimited text file.\r\n\r\nThe Hyper-Hypo speech measure uses the clusters to calculate the distance of each token from the center of the cluster (the prototypical token).  This measure assumes that all tokens are from the same speaker and normalizes the distance of each token by subtracting the mean distance of all tokens from the individual distance.  It then assigns positive and negative values to this value based on the difference in duration between the token and the center of the cluster.  If the token is longer than the center of the cluster, then the Hyper-Hypo speech measure is positive, otherwise it's negative.\r\n\r\n### Attributes\r\nIf you want other columns in the table besides just the name of the file, you can put a tab-delimited text file named \"attributes.txt\" with a column named \"filename\" corresponding to the names of the wav files and however many attributes you want to give them.  Here's a link to a Dropbox folder that has an attributes file, so you can see how it functions: <https://www.dropbox.com/sh/zzl8g8c59yisarg/AADNsd9cciKQZz_AG-4gT16ea?dl=0>.\r\n\r\nOne thing that you can do with columns is right click on their header and go to \"Change graph display\".  Selecting one of those options will change how tokens are displayed in the network.  For instance, selecting \"Size\" for the \"HyperHypoMeasure\" column will have the tokens with the highest value as the biggest and the lowest as the smallest.  It has some rudimentary factor vs numeric detection, so \"Shape\" won't work for numeric, and \"Size\" and \"Color\" behave differently.  They behave similar to ggplot2 in R, where \"Color\" for numerics will be shades of blue, \"Color\" for factors will be hues across the color spectrum, \"Size\" will be matched to mins and maxes of numerics, and be equally spaced for factors.  \"Shape\" is not great for factors with greater than 6 levels, since that's the number of default shapes in the graphing utility and levels beyond that number just get assigned the last shape.\r\n\r\n### Plots\r\nThe plots on the right hand side give you the spectrogram, a spectrogram-like visual of the auditory representation, and, if two tokens are selected (via ctrl+click), the distance matrix used for dynamic time warping between the two sounds. I need to get some better axes worked out for these, but they're nice for visualizing the acoustics.  Additionally, there's a button in the upper left that will play whatever token is selected. The network visualization can be moved around and zoomed.\r\n\r\n### Known issues\r\n* Plots sometimes do not resize on their own, a workaround is to resize the window and then click and drag the mouse inside each plot to make it resize","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}